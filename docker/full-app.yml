version: '3.3'
services:

  # Backend Source
  SERVICE_NAME_API:
    image: springboot-docker-compose-app:1
    ports:
      - "8080:8080"
    depends_on:
      SERVICE_NAME_DB:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://SERVICE_NAME_DB:5432/d56mlvem6o8lh7
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=azerty
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - shared_volume:/logs

  # PostgreSql
  SERVICE_NAME_DB:
    image: postgres:13.2
    environment:
      - POSTGRES_PASSWORD=azerty
      - POSTGRES_USER=postgres
      - POSTGRES_DB=d56mlvem6o8lh7
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    container_name: elasticsearch
    volumes:
      - ~/volumes/srfgroup/elasticsearch/:/usr/share/elasticsearch/data/
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 9200:9200
    environment:
      - 'xpack.security.enabled=false'
      - 'discovery.type=single-node'
      - 'bootstrap.memory_lock=true'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    networks:
      - elk

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.0
    container_name: kibana
    # volumes:
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  # Logstash
  logstash:
    image: logstash:7.6.1
    container_name: logstash
    environment:
      - ENV_TAG_PATH=SERVICE_NAME_API:/logs/SrfGroupElk.log
    links:
      - elasticsearch:elasticsearch
    volumes:
      - ./logstash/:/etc/logstash/conf.d/
      # - ./logs/SrfGroupElk.log:/tmp/logs/SrfGroupElk.log
      - shared_volume:/tmp/logs
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    ports:
      - "5000:5000"
    networks:
      - elk
    depends_on:
      - elasticsearch

# Network for app
networks:
  elk:
    driver: bridge

volumes:
  shared_volume:
    name: shared_volume
